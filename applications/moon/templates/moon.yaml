---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Values.role.name }}
  namespace: {{ .Values.namespace }}
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
      - configmaps
      - secrets
      - resourcequotas
    verbs:
      - get
      - watch
      - list
      - create
      - update
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Values.rolebinding.name }}
  namespace: {{ .Values.namespace }}
roleRef:
  kind: Role
  name: {{ .Values.role.name }}
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    namespace: {{ .Values.namespace }}
    name: default
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.service.moon.name }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: {{ .Values.deployment.name }}
  ports:
    - name: {{ .Values.service.moon.webdriver.name }}
      protocol: TCP
      port: {{ .Values.deployment.moon.port }}
    - name: {{ .Values.service.moon.ui.name }}
      protocol: TCP
      port: {{ .Values.deployment.selenoid_ui.port }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.service.browser.name }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    moon: browser
  clusterIP: None
  publishNotReadyAddresses: true
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.ingress.name }}
  namespace: {{ .Values.namespace }}
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: {{ .Values.ingress.host }}
      http:
        paths:
          - path: {{ .Values.ingress.webdriver.path }}
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.service.moon.name }}
                port:
                  number: {{ .Values.deployment.moon.port }}
          - path: {{ .Values.ingress.ui.path }}
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.service.moon.name }}
                port:
                  number: {{ .Values.deployment.selenoid_ui.port }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.deployment.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.deployment.name }}
    spec:
      containers:
        - name: nginx
          image: {{ .Values.deployment.nginx.image }}:{{ .Values.deployment.nginx.tag }}
        - name: moon
          image: {{ .Values.deployment.moon.image }}:{{ .Values.deployment.moon.tag }}
          args: [ "-namespace", "moon", "-license-file", "/license/license.key" ]
          resources:
            limits:
              cpu: "0.5"
              memory: "128Mi"
            requests:
              cpu: "0.2"
              memory: "128Mi"
          ports:
            - containerPort: {{ .Values.deployment.moon.port }}
          volumeMounts:
            - name: quota
              mountPath: /quota
              readOnly: true
            - name: config
              mountPath: /config
              readOnly: true
            - name: users
              mountPath: /users
              readOnly: true
            - name: license-key
              mountPath: /license
              readOnly: true
        - name: moon-api
          image: {{ .Values.deployment.moon_api.image }}:{{ .Values.deployment.moon_api.tag }}
          args: [ "-namespace", "moon", "-license-file", "/license/license.key", "-listen", ":8888" ]
          resources:
            limits:
              cpu: "0.25"
              memory: "64Mi"
            requests:
              cpu: "0.05"
              memory: "64Mi"
          ports:
            - containerPort: {{ .Values.deployment.moon_api.port }}
          volumeMounts:
            - name: quota
              mountPath: /quota
              readOnly: true
            - name: license-key
              mountPath: /license
              readOnly: true
        - name: selenoid-ui
          image: {{ .Values.deployment.selenoid_ui.image }}:{{ .Values.deployment.selenoid_ui.tag }}
          args: [ "-status-uri", "http://localhost:8888", "-webdriver-uri", "http://localhost:4444" ]
          resources:
            limits:
              cpu: "0.25"
              memory: "64Mi"
            requests:
              cpu: "0.05"
              memory: "64Mi"
          ports:
            - name: selenoid-ui
              containerPort: {{ .Values.deployment.selenoid_ui.port }}
      volumes:
        - name: quota
          configMap:
            name: quota
        - name: config
          configMap:
            name: config
        - name: users
          secret:
            secretName: users
        - name: license-key
          secret:
            secretName: licensekey
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.configmap.config.name }}
  namespace: {{ .Values.namespace }}
data:
  service.json: |
    {
      "kernelCaps": [ "SYS_ADMIN" ]
    }


  devices.json: |
    {
      "Apple iPhone 11": {
        "width": 414,
        "height": 896,
        "pixelRatio": 2,
        "userAgent": "Mozilla/5.0 (iPhone; CPU iPhone OS 13_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.4 Mobile/15E148 Safari/604.1"
      }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.configmap.quota.name }}
  namespace: {{ .Values.namespace }}
data:
  browsers.json: |
    {
      "chrome": {
        "default": "94.0",
        "versions": {
          "94.0": {
            "image": "selenoid/chrome:94.0",
            "port": "4444"
          }
        }
      }
    }

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secret.users.name }}
  namespace: {{ .Values.namespace }}
stringData:
  users.htpasswd: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secret.license.name }}
  namespace: {{ .Values.namespace }}
stringData:
  license.key: {{ .Values.secret.license.key }}
